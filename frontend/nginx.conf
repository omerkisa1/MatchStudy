server {
    listen 80;
    server_name _;
    
    charset utf-8;
    override_charset on;
    
    # Default headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        charset utf-8;
    }
    
    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Accept-Charset "utf-8";
        proxy_set_header Content-Type "application/json; charset=utf-8";
        
        # UTF-8 related settings
        charset utf-8;
        source_charset utf-8;
        charset_types application/json text/xml application/xml text/plain;
        
        # Remove or modify content encoding headers from backend
        proxy_hide_header Content-Encoding;
    }
    
    location /socket.io/ {
        proxy_pass http://socket:3000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
}